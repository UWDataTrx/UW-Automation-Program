name: Weekly File Sync

on:
  schedule:
    - cron: '0 10 * * 5'  # Every Friday at 10:00 AM UTC (6:00 AM ET)
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-specific-files:
    runs-on: windows-latest

    steps:
      - name: Checkout destination repo
        uses: actions/checkout@v3

      - name: Add upstream (source repo)
        run: |
          echo "Adding upstream repository..."
          git remote add upstream https://github.com/UWDataTrx/UW-Automation-Program.git
          echo "Fetching from upstream..."
          git fetch upstream
          echo "Upstream repository added and fetched successfully"
          echo "Available remotes:"
          git remote -v

      - name: Check which files exist in upstream
        run: |
          echo "Files available in upstream/main:"
          git ls-tree -r --name-only upstream/main | head -20

      - name: Sync specific files
        continue-on-error: false
        run: |
          echo "Starting file and directory sync..."
          
          # Sync root-level app.py file
          echo "Syncing app.py..."
          if git show upstream/main:app.py >/dev/null 2>&1; then
            git checkout upstream/main -- app.py && echo "✓ Synced: app.py" || echo "✗ Failed to sync: app.py"
          else
            echo "⚠ app.py not found in upstream"
          fi
          
          # Sync entire directories
          declare -a directories=(
            "config"
            "modules"
            "utils"
          )
          
          for dir in "${directories[@]}"; do
            echo "Syncing ${dir}/ directory..."
            if git show upstream/main:${dir} >/dev/null 2>&1; then
              # Remove local directory first to ensure clean sync
              rm -rf ${dir}
              git checkout upstream/main -- ${dir}/ && echo "✓ Synced directory: ${dir}/" || echo "✗ Failed to sync directory: ${dir}/"
            else
              echo "⚠ ${dir}/ directory not found in upstream"
            fi
          done
          
          echo "File and directory sync completed."

      - name: Commit and push changes
        continue-on-error: true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          echo "Checking for changes..."
          git status
          
          # Check if there are any changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected, committing..."
            git add -A
            git commit -m "Weekly sync of specific files from upstream - $(date)"
            git push origin main
            echo "Changes committed and pushed successfully"
          else
            echo "No changes to commit"
          fi
