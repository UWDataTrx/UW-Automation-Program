name: Weekly File Sync

on:
  schedule:
    - cron: '0 10 * * 5'  # Every Friday at 10:00 AM UTC (6:00 AM ET)

jobs:
  sync-specific-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout destination repo
        uses: actions/checkout@v3

      - name: Add upstream (source repo)
        run: |
          git remote add upstream https://github.com/UWDataTrx/UW-Automation-Program.git
          git fetch upstream
          echo "Upstream repository added and fetched"

      - name: Check which files exist in upstream
        run: |
          echo "Files available in upstream/main:"
          git ls-tree -r --name-only upstream/main | head -20

      - name: Sync specific files
        continue-on-error: false
        run: |
          echo "Starting file sync..."
          
          # List of files to sync (only the ones we know exist)
          declare -a files=(
            "app.py"
            "tier_disruption.py" 
            "openmdf_bg.py"
            "openmdf_tier.py"
            "bg_disruption.py"
            "epls_lbl.py"
            "merge.py"
            "sharx_lbl.py"
          )
          
          # Sync each file individually with error handling
          for file in "${files[@]}"; do
            echo "Attempting to sync: $file"
            if git show upstream/main:$file >/dev/null 2>&1; then
              git checkout upstream/main -- $file && echo "✓ Synced: $file" || echo "✗ Failed to sync: $file"
            else
              echo "⚠ File not found in upstream: $file"
            fi
          done
          
          # Try to sync utils directory files
          echo "Syncing utils directory..."
          git checkout upstream/main -- utils/ 2>/dev/null || echo "⚠ utils/ directory not found in upstream"
          
          # Try to sync config directory files  
          echo "Syncing config directory..."
          git checkout upstream/main -- config/ 2>/dev/null || echo "⚠ config/ directory not found in upstream"
          
          echo "File sync completed."

      - name: Commit and push changes
        continue-on-error: true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          echo "Checking for changes..."
          git status
          
          # Check if there are any changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected, committing..."
            git add -A
            git commit -m "Weekly sync of specific files from upstream - $(date)"
            git push origin main
            echo "Changes committed and pushed successfully"
          else
            echo "No changes to commit"
          fi
