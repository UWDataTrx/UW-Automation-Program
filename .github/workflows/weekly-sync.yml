name: Weekly File Sync

on:
  schedule:
    - cron: '0 10 * * 5'  # Every Friday at 10:00 AM UTC (6:00 AM ET)
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-specific-files:
    runs-on: windows-latest

    steps:
      - name: Checkout destination repo
        uses: actions/checkout@v3

      - name: Add upstream (source repo)
        run: |
          echo "Adding upstream repository..."
          git remote add upstream https://github.com/UWDataTrx/UW-Automation-Program.git
          echo "Fetching from upstream..."
          git fetch upstream
          echo "Upstream repository added and fetched successfully"
          echo "Available remotes:"
          git remote -v

      - name: Check which files exist in upstream
        run: |
          echo "Files available in upstream/main:"
          git ls-tree -r --name-only upstream/main | head -20

      - name: Clean cache and temp files
        shell: pwsh
        run: |
          Write-Output "Cleaning cache and temp files..."
          Get-ChildItem -Path . -Recurse -Include *.pyc,~$*,*.tmp,*.log,*.bak | Remove-Item -Force

      - name: Sync specific files
        shell: pwsh
        continue-on-error: false
        run: |
          Write-Output "Starting file and directory sync..."

          # Sync root-level app.py file
          Write-Output "Syncing app.py..."
          $appExists = git ls-tree -r --name-only upstream/main | Select-String -Pattern "^app.py$"
          if ($appExists) {
            git checkout upstream/main -- app.py
            Write-Output "✓ Synced: app.py"
          } else {
            Write-Output "⚠ app.py not found in upstream"
          }

          # Sync entire directories
          $directories = @("config", "modules", "utils")
          foreach ($dir in $directories) {
            Write-Output "Syncing $dir/ directory..."
            $dirExists = git ls-tree -r --name-only upstream/main | Select-String -Pattern "^$dir/"
            if ($dirExists) {
              Remove-Item -Recurse -Force $dir
              git checkout upstream/main -- "$dir/"
              Write-Output "✓ Synced directory: $dir/"
            } else {
              Write-Output "⚠ $dir/ directory not found in upstream"
            }
          }
          
          echo "File and directory sync completed."

      - name: Commit and push changes
        continue-on-error: true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          echo "Checking for changes..."
          git status
          
          # Check if there are any changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected, committing..."
            git add -A
            git commit -m "Weekly sync of specific files from upstream - $(date)"
            git push origin main
            echo "Changes committed and pushed successfully"
          else
            echo "No changes to commit"
          fi
